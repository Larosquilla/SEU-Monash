#include<iostream>
#include<cstring>
#include<string>

using namespace std;

//返回v[i]~v[j]这些数字所表示的数值
long nums(int v[],int i,int j){
    long num=v[i];
    for(int k=i+1;k<=j;k++){
        num = num*10+v[k];
    }
    return num;
}

long MaxMult(int v[], int N,int K){
    
    long dp[N][K+1];
    //将dp的所有元素初始化为0
	memset(dp,0,sizeof(dp));
    for(int i=0; i<N; i++)
        dp[i][0] = nums(v,0,i); //不划分就是前i个一起构成一个数

    for(int i=0; i<N; i++){//在v[0]~v[i]之间插入j个乘号
        for(int j=1; j<=K&&j<i+1; j++)//显然j的个数不能超过i
            for(int k=0;k<i;k++)//插入乘号的位置为k
                dp[i][j] = max(dp[i][j],dp[k][j-1]*nums(v,k+1,i));
         //cout << endl;
    }
    
	// for(int i=0;i<N;i++)
	// {
	// 	for(int j=0;j<=K;j++)
	// 		cout << dp[i][j] << ' ';
	// 	cout << endl;
	// }
    return dp[N-1][K];

}


int main() {
    int M,N,K;

    cin >> M;//M个Sample
    for(int i=0; i<M; i++){
        cin >> N >> K;
        string s;
        cin >> s;
        int v[N];
        for(int j=0;j<N;j++)
            v[j] = s[j]-'0';//将字符转化为数字
        cout << MaxMult(v,N,K) << endl;

    }   
    
    return 0;
}
