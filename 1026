#include<iostream>
#include<algorithm>

using namespace std;


long long InsertMult(int v[],int N, int K) {
    
    //在数字序列v[N]中插入K个乘号和N-1-K个加号，使得最终结果最大
    long long dp[21][21];//dp[i][j]表示在前i个数里面插入j个乘号得到的最大值，满足i>j
    long long sum[21];//sum[i]表示前i个数的总和,则i+1到k的和可以表示为sum[k]-sum[i]
    sum[0]=0;
    for(int i = 1; i <= N; i++) {
        sum[i] =  sum[i-1] + v[i];//

    }

    for(int i = 1; i <= N; i++) {
        dp[i][0] = sum[i];
    }
    for(int i=2;i<=N;++i)
        for(int j=1;j<i;++j)
            dp[i][j]=-1;
    
    for(int j=1;j<=K;++j)//dp[i][j]表示在1-i中插入j个乘号
        for(int i=j+1;i<=N;++i)
            for(int k=j+1;k<=i;++k)//乘号j的插入位置是k，表示在v[k]前面插入乘号
                dp[i][j]=max(dp[i][j],dp[k-1][j-1]*(sum[i]-sum[k-1]));
    return dp[N][K];
}
    


int main() {
    int M,N,K;

    cin >> M;//M个Sample
    for(int i=0; i<M; i++){
        cin >> N >> K;//N<=20, K<20
        int v[N+1];
        for(int j=1;j<=N;j++){
            cin >> v[j];
        }
        cout << InsertMult(v,N,K);
        cout  << endl;

    }   
    
    return 0;
}
